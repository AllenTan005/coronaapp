{"version":3,"sources":["components/Header.js","components/Chart.js","components/Cards.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","backgroundColor","Header","classes","className","AppBar","position","Container","Toolbar","Typography","variant","Chart","line","lineData","pieData","lineChart","data","labels","map","Date","substring","datasets","Confirmed","label","borderColor","fill","Deaths","Recovered","pieChart","borderWidth","TotalConfirmed","TotalRecovered","TotalDeaths","card","margin","padding","width","textAlign","marginBottom","background","color","breakpoints","down","maxWidth","newUpdate","marginTop","Cards","country","Grid","container","item","Card","CardContent","gutterBottom","component","start","end","separator","duration","NewConfirmed","NewDeaths","NewRecovered","formControl","minWidth","Top","countrySelector","paddingTop","fontWeight","fontSize","defaultSelector","innerSelector","chart","border","borderRadius","App","useState","summary","setSummary","setCountry","selectedCountry","setSelectedCountry","countrySummary","setCountrySummary","countryResult","setCountryResult","url","useEffect","getSummary","a","axios","get","console","error","getCountry","getSelectedCountry","reduce","total","curr","lg","xs","Global","FormControl","InputLabel","Select","value","onChange","e","target","MenuItem","Slug","Country","slug","md","pie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.112b7d98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#3700b3\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Container>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Covid-App\r\n            </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Line, Pie } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({ line, lineData, pieData }) => {\r\n  const lineChart = !lineData ? (\r\n    \"\"\r\n  ) : (\r\n    <Line\r\n      data={{\r\n        labels: lineData.map(({ Date }) => Date.substring(1, 10)),\r\n        datasets: [\r\n          {\r\n            data: lineData.map(({ Confirmed }) => Confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#6200ee\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: lineData.map(({ Deaths }) => Deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"#cf6679\",\r\n            backgroundColor: \"rgba(128,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: lineData.map(({ Recovered }) => Recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"#018786\",\r\n            backgroundColor: \"rgba(50,205,50,0.7)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n  const pieChart = !pieData ? (\r\n    \"loading..\"\r\n  ) : (\r\n    <Pie\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\r\n        datasets: [\r\n          {\r\n            label: \"people\",\r\n            backgroundColor: [\r\n              \"rgba(48,25,52,1)\",\r\n              \"rgba(50,205,50,0.7)\",\r\n              \"rgba(128,0,0,0.5)\",\r\n              \"rgba(70,130,255,0.7)\",\r\n            ],\r\n            borderColor:[\"#6200ee\",\"#018786\",\"#cf6679\"],\r\n            borderWidth:0,\r\n            data:[\r\n                pieData.TotalConfirmed,\r\n                pieData.TotalRecovered,\r\n                pieData.TotalDeaths,\r\n                pieData.TotalConfirmed - (pieData.TotalRecovered + pieData.TotalDeaths),\r\n            ]\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n\r\n  return <div>{line ? lineChart : pieChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core/\";\r\n\r\nimport CountUp from \"react-countup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: 10,\r\n    padding: 10,\r\n    width: 275,\r\n    textAlign: \"start\",\r\n    marginBottom: 7,\r\n    background: \"#121212\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 435,\r\n    },\r\n  },\r\n  newUpdate: {\r\n    color: \"#018786\",\r\n    marginTop: 7,\r\n  },\r\n}));\r\n\r\nconst Cards = ({ data, country }) => {\r\n  const classes = useStyles();\r\n\r\n  return data === null ? (\r\n    <h1>loading</h1>\r\n  ) : (\r\n    <Grid container spacing={3}>\r\n      {/*1st card */}\r\n      <Grid item>\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Total Cases</Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp\r\n                start={100}\r\n                end={data.TotalConfirmed}\r\n                separator=\",\"\r\n                duration={2}\r\n              />\r\n            </Typography>\r\n\r\n            {!country && (\r\n              <Typography variant=\"subtitle1\" className={classes.newUpdate}>\r\n                &#9650;{\" \"}\r\n                <CountUp\r\n                  start={100}\r\n                  end={data.NewConfirmed}\r\n                  separator=\",\"\r\n                  duration={2}\r\n                />\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {/*2nd card */}\r\n      <Grid item>\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Total Death</Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp\r\n                start={100}\r\n                end={data.TotalDeaths}\r\n                separator=\",\"\r\n                duration={2}\r\n              />\r\n            </Typography>\r\n            {!country && (\r\n              <Typography variant=\"subtitle1\" className={classes.newUpdate}>\r\n                &#9650;{\" \"}\r\n                <CountUp\r\n                  start={100}\r\n                  end={data.NewDeaths}\r\n                  separator=\",\"\r\n                  duration={2}\r\n                />\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      {/*3rd card */}\r\n      <Grid item>\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Total Recovered</Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n              <CountUp\r\n                start={100}\r\n                end={data.TotalRecovered}\r\n                separator=\",\"\r\n                duration={2}\r\n              />\r\n            </Typography>\r\n            {!country && (\r\n              <Typography variant=\"subtitle1\" className={classes.newUpdate}>\r\n                &#9650;{\" \"}\r\n                <CountUp\r\n                  start={100}\r\n                  end={data.NewRecovered}\r\n                  separator=\",\"\r\n                  duration={2}\r\n                />\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Chart from \"./components/Chart\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n} from \"@material-ui/core/\";\nimport Cards from \"./components/Cards\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  Top: {\n    marginTop: 20,\n  },\n  countrySelector: {\n    paddingTop: 20,\n    color: \"#3700b3\",\n    fontWeight: \"Bold\",\n  },\n  title: {\n    color: \"#fff\",\n    fontWeight: \"Bold\",\n    fontSize: 20,\n  },\n  defaultSelector: {\n    color: \"#fff\",\n  },\n  innerSelector: {\n    marginTop: 10,\n  },\n  chart: {\n    marginTop: 50,\n    width: \"100%\",\n    padding: 20,\n    border: '1px solid #eee',\n    borderRadius:10,\n    },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [summary, setSummary] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(\"worldwide\");\n  const [countrySummary, setCountrySummary] = useState(null);\n  const [countryResult, setCountryResult] = useState(null);\n\n  const url = \"https://api.covid19api.com\";\n\n  useEffect(() => {\n    const getSummary = async () => {\n      try {\n        const { data } = await axios.get(`${url}/summary`);\n        setSummary(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    \n\n    const getCountry = async () => {\n      try {\n        const { data } = await axios.get(`${url}/countries`);\n        setCountry(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const getSelectedCountry = async () => {\n      try {\n        const { data } = await axios.get(\n          `${url}/total/dayone/country/${selectedCountry}`\n        );\n        setCountryResult(data);\n        setCountrySummary({\n          TotalConfirmed: data.reduce(\n            (total, curr) => total + curr.Confirmed,\n            0\n          ),\n          TotalDeaths: data.reduce((total, curr) => total + curr.Deaths, 0),\n          TotalRecovered: data.reduce(\n            (total, curr) => total + curr.Recovered,\n            0\n          ),\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getCountry();\n    getSummary();\n    getSelectedCountry();\n  }, [selectedCountry]);\n\n  return summary === null ? (\n    <h1>loading..</h1>\n  ) : (\n    <>\n      <Header />\n\n      <Container>\n        <Grid container>\n          <Grid item lg={3} xs={12}>\n            <div className={classes.Top}>\n              <Typography variant=\"h5\">Global Overview</Typography>\n              <Typography>\n                Last Update: {summary.Date.substring(0, 10)}\n              </Typography>\n              <Cards data={summary.Global} />\n            </div>\n          </Grid>\n\n          <Grid item lg={9} xs={12}>\n            <FormControl className={classes.formControl}>\n              <InputLabel className={classes.title}>\n                Select Countries\n              </InputLabel>\n              <Select\n                className={classes.countrySelector}\n                value={selectedCountry}\n                onChange={(e) => setSelectedCountry(e.target.value)}\n              >\n                {country.map((item) => (\n                  <MenuItem\n                    className={classes.innerSelector}\n                    key={item.slug}\n                    value={item.Slug}\n                  >\n                    {item.Country}\n                  </MenuItem>\n                ))}\n              </Select>\n              <Cards data={countrySummary} country />\n            </FormControl>\n            <Grid container className={classes.chart}>\n              <Grid item xs={12} md={4}>\n                <Chart line lineData={countryResult} />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Chart pie pieData={countrySummary} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}